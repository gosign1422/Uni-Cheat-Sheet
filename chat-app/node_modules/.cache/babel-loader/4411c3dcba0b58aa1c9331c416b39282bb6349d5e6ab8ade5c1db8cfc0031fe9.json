{"ast":null,"code":"import React,{useState,useEffect}from'react';import{supabase}from'./supabaseClient';import'./ChatWidget.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function ChatWidget(){const[isOpen,setIsOpen]=useState(false);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[username,setUsername]=useState('');const[isUsernameSet,setIsUsernameSet]=useState(false);useEffect(()=>{if(isOpen){fetchMessages();const subscription=supabase.channel('messages').on('postgres_changes',{event:'INSERT',schema:'public',table:'messages'},payload=>{setMessages(prev=>[...prev,payload.new]);}).subscribe();return()=>{subscription.unsubscribe();};}},[isOpen]);const fetchMessages=async()=>{const{data,error}=await supabase.from('messages').select('*').order('created_at',{ascending:true});if(error){console.error('Error fetching messages:',error);return;}setMessages(data);};const handleSubmit=async e=>{e.preventDefault();if(!newMessage.trim()||!username)return;const{error}=await supabase.from('messages').insert([{username,content:newMessage.trim()}]);if(error){console.error('Error sending message:',error);return;}setNewMessage('');};const setUsernameHandler=e=>{e.preventDefault();if(username.trim()){setIsUsernameSet(true);}};return/*#__PURE__*/_jsx(\"div\",{className:\"chat-widget\",children:!isOpen?/*#__PURE__*/_jsx(\"button\",{className:\"chat-toggle-button\",onClick:()=>setIsOpen(true),children:\"\\uD83D\\uDCAC Chat Room\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"chat-widget-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-widget-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Live Chat Room\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:()=>setIsOpen(false),children:\"\\xD7\"})]}),!isUsernameSet?/*#__PURE__*/_jsxs(\"div\",{className:\"username-container\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Enter your username to start chatting\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:setUsernameHandler,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),placeholder:\"Enter username\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Start Chatting\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"messages-container\",children:messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`message ${message.username===username?'own-message':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-username\",children:message.username}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:message.content}),/*#__PURE__*/_jsx(\"div\",{className:\"message-time\",children:new Date(message.created_at).toLocaleTimeString()})]},index))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"message-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),placeholder:\"Type your message...\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]})]})]})});}export default ChatWidget;","map":{"version":3,"names":["React","useState","useEffect","supabase","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatWidget","isOpen","setIsOpen","messages","setMessages","newMessage","setNewMessage","username","setUsername","isUsernameSet","setIsUsernameSet","fetchMessages","subscription","channel","on","event","schema","table","payload","prev","new","subscribe","unsubscribe","data","error","from","select","order","ascending","console","handleSubmit","e","preventDefault","trim","insert","content","setUsernameHandler","className","children","onClick","onSubmit","type","value","onChange","target","placeholder","required","map","message","index","Date","created_at","toLocaleTimeString"],"sources":["C:/Users/yashg/OneDrive/Desktop/UPES_2025/chat-app/src/ChatWidget.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from './supabaseClient';\r\nimport './ChatWidget.css';\r\n\r\nfunction ChatWidget() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [isUsernameSet, setIsUsernameSet] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      fetchMessages();\r\n      const subscription = supabase\r\n        .channel('messages')\r\n        .on('postgres_changes', { event: 'INSERT', schema: 'public', table: 'messages' }, payload => {\r\n          setMessages(prev => [...prev, payload.new]);\r\n        })\r\n        .subscribe();\r\n\r\n      return () => {\r\n        subscription.unsubscribe();\r\n      };\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const fetchMessages = async () => {\r\n    const { data, error } = await supabase\r\n      .from('messages')\r\n      .select('*')\r\n      .order('created_at', { ascending: true });\r\n\r\n    if (error) {\r\n      console.error('Error fetching messages:', error);\r\n      return;\r\n    }\r\n\r\n    setMessages(data);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !username) return;\r\n\r\n    const { error } = await supabase\r\n      .from('messages')\r\n      .insert([\r\n        {\r\n          username,\r\n          content: newMessage.trim(),\r\n        },\r\n      ]);\r\n\r\n    if (error) {\r\n      console.error('Error sending message:', error);\r\n      return;\r\n    }\r\n\r\n    setNewMessage('');\r\n  };\r\n\r\n  const setUsernameHandler = (e) => {\r\n    e.preventDefault();\r\n    if (username.trim()) {\r\n      setIsUsernameSet(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-widget\">\r\n      {!isOpen ? (\r\n        <button className=\"chat-toggle-button\" onClick={() => setIsOpen(true)}>\r\n          ðŸ’¬ Chat Room\r\n        </button>\r\n      ) : (\r\n        <div className=\"chat-widget-container\">\r\n          <div className=\"chat-widget-header\">\r\n            <h3>Live Chat Room</h3>\r\n            <button className=\"close-button\" onClick={() => setIsOpen(false)}>Ã—</button>\r\n          </div>\r\n          \r\n          {!isUsernameSet ? (\r\n            <div className=\"username-container\">\r\n              <h4>Enter your username to start chatting</h4>\r\n              <form onSubmit={setUsernameHandler}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  placeholder=\"Enter username\"\r\n                  required\r\n                />\r\n                <button type=\"submit\">Start Chatting</button>\r\n              </form>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"messages-container\">\r\n                {messages.map((message, index) => (\r\n                  <div key={index} className={`message ${message.username === username ? 'own-message' : ''}`}>\r\n                    <div className=\"message-username\">{message.username}</div>\r\n                    <div className=\"message-content\">{message.content}</div>\r\n                    <div className=\"message-time\">\r\n                      {new Date(message.created_at).toLocaleTimeString()}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <form onSubmit={handleSubmit} className=\"message-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newMessage}\r\n                  onChange={(e) => setNewMessage(e.target.value)}\r\n                  placeholder=\"Type your message...\"\r\n                  required\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n              </form>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWidget; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}